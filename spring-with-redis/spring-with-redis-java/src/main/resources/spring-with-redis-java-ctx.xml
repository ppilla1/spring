<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:redis="http://www.springframework.org/schema/redis"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/redis
		http://www.springframework.org/schema/redis/spring-redis.xsd
	"
>
	<context:component-scan base-package="io.ppillai.spring.redis"/>
	<context:property-placeholder location="classpath:spring-with-redis-java.properties"/>
	
	<cache:annotation-driven />
	
	<!-- Redis connection factory -->
	<bean id="redisConnectionFactory"
		  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:hostName="${redis.hostname}"
		  p:port="${redis.port}"
		  p:timeout="${redis.timeout}"
		  p:usePool="${redis.usepool}"
	/>
	<bean id="stringRedisSerializer" 
		  class="org.springframework.data.redis.serializer.StringRedisSerializer"
	/>
	
	<!-- Redis spring cache configuration -->
	<bean id="jedisCacheTemplate"
		  class="org.springframework.data.redis.core.RedisTemplate"
		  p:connectionFactory-ref="redisConnectionFactory"
		  p:keySerializer-ref="stringRedisSerializer"
		  p:hashKeySerializer-ref="stringRedisSerializer"
	/>
	
	<bean id="cacheManager"
		  class="org.springframework.data.redis.cache.RedisCacheManager"
		  c:template-ref="jedisCacheTemplate"
		  p:defaultExpiration="${redis.cache.expiry}" 
	/>
	
	<!-- Redis spring pub/sub configuration -->
	<bean id="jedisPubSubTemplate"
		  class="org.springframework.data.redis.core.RedisTemplate"
		  p:connectionFactory-ref="redisConnectionFactory"
	/>
	
	<bean id="registerUserProfileSub" class="io.ppillai.spring.redis.repository.RedisSubRegisterUserService"/>
	
	<redis:listener-container>
		<redis:listener ref="registerUserProfileSub" method="onMessage" topic="new.user"/>
	</redis:listener-container>
</beans>